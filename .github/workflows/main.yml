name: CI/CD Pipeline

on: [push, pull_request]

jobs:

  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Run Checkstyle for Java code (ensure `checkstyle.xml` exists in your project)
      - name: Run Checkstyle for Java
        run: |
          mvn checkstyle:check

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # Adjust the version based on your project needs

      # Build the project using Maven
      - name: Maven Build
        run: mvn clean package

      # Run tests and generate test coverage
      - name: Run Maven Tests with Coverage
        run: mvn test jacoco:report

      # Upload generated coverage report
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: target/site/jacoco/index.html # Adjust path if needed

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx (for multi-platform builds, optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login into DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build and Tag the Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/mortgage-app:${{ github.sha }} .

      # Push the Docker image to DockerHub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mortgage-app:${{ github.sha }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Run Trivy (security scan for Docker images)
      - name: Trivy Security Scan
        uses: aquasecurity/trivy-action@v0.11.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/mortgage-app:${{ github.sha }}
          format: table

      # Optional: Run Grype as an additional security scanner
      - name: Grype Security Scan
        uses: anchore/grype-action@v0.2.0
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/mortgage-app:${{ github.sha }}
